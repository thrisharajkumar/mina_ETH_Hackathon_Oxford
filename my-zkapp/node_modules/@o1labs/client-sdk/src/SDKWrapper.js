"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
exports.unsafeSignAny = void 0;
var SDK = require("./CodaSDK");
__exportStar(require("./CodaSDK"), exports);
function hasCommonProperties(p) {
    return p.hasOwnProperty("to") && p.hasOwnProperty("from") && p.hasOwnProperty("fee") && p.hasOwnProperty("nonce");
}
function isPayment(p) {
    return hasCommonProperties(p) && p.hasOwnProperty('amount');
}
function isStakeDelegation(p) {
    return hasCommonProperties(p) && !p.hasOwnProperty('amount');
}
function unsafeSignAny(payload, key) {
    if (typeof payload === 'string') {
        return SDK.signMessage(payload, key);
    }
    if (isPayment(payload)) {
        return SDK.signPayment(payload, key);
    }
    if (isStakeDelegation(payload)) {
        return SDK.signStakeDelegation(payload, key);
    }
    throw new Error("Expected signable payload, got '" + payload + "'.");
}
exports.unsafeSignAny = unsafeSignAny;
;
